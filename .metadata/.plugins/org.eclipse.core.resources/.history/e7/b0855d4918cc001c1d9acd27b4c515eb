package com.qart.StockMarket.services;

import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.qart.StockMarket.dto.CompanyDetailsDTO;
import com.qart.StockMarket.exception.CompanyNotFoundException;
import com.qart.StockMarket.exception.GeneralException;
import com.qart.StockMarket.model.CompanyDetails;
import com.qart.StockMarket.repository.CompanyDetailsRepository;
import com.qart.StockMarket.utils.StockMarketUtility;

@Service
public class CompanyDetailsServiceImpl implements CompanyDetailsService{
	
	@Autowired
	private CompanyDetailsRepository companyDetailsRepository;

	@Override
	public CompanyDetailsDTO saveCompanyDetails(CompanyDetailsDTO companyDetailsDTO) {
		CompanyDetails saved = companyDetailsRepository.save(StockMarketUtility.convertToCompanyDetails(companyDetailsDTO));
		CompanyDetailsDTO savedDto = StockMarketUtility.convertToCompanyDetailsDTO(saved);
		if(saved==null) {
			throw new GeneralException("Database write failed");
		}
		return savedDto;
	}

	public CompanyDetailsDTO deleteCompany(Long companyCode) {
		Optional<CompanyDetails> company = companyDetailsRepository.findById(companyCode);
		if(company.isPresent()) {
			Integer value;
	        if(company == null)
	             return null;
	        else
	          value= companyDetailsRepository.delete(companyCode);
	                if(value!=null)
	                	return companyDetails;
	                else
	    		    return null;
//			companyDetailsRepository.delete(company.get());
//			return true;	
		}else {
			throw new CompanyNotFoundException("Company with Code " + companyCode + " not found");
		}
	}
	
	public CompanyDetailsDTO getCompanyInfoById(Long companyCode) {
		
		Optional<CompanyDetails> company =companyDetailsRepository.findById(companyCode);
        if(company!=null)
            return StockMarketUtility.convertToCompanyDetailsDTO(company.get());
		return null;
	};
	
	

}
